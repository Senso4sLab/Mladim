@using Mladim.Client.ViewModels.Survey;
@using Mladim.Domain.Enums;
@using Mladim.Domain.Extensions;



<MudPaper Class="p-2">
    <MudText Color="Color.Tertiary" Class="py-3 px-2" Typo="Typo.h2">@ButtonResponseGroup.QuestionDescription</MudText>

    @foreach(var buttonResponse in ButtonResponseGroup.ButtonGroupResponses)
    {
        <MudText Color="Color.Tertiary" Class="py-3 px-2" Typo="Typo.h2">@buttonResponse.Question</MudText>
        <table class="table">
            <thead>
                <tr>
                    <th scope="col">@Selector.Name</th>
                    @foreach (var type in Enum.GetValues<SurveyButtonResponseType>())
                    {
                        <th class="text-center" scope="col">@type.GetDisplayAttribute()</th>
                    }
                    <th class="text-center" scope="col">Skupaj</th>
                </tr>
            </thead>
            <tbody>

                @foreach (var row in GetSurveyParticipantRows(buttonResponse))
                {
                    <tr>
                        <th scope="row">@row.Criterion</th>

                        @foreach (var participantsByType in row.ParticipantsPerType)
                        {
                            <td class="text-center">@participantsByType.NumOfParticipants</td>
                        }
                        <td class="text-center">@row.ParticipantsPerType.Sum(pt => pt.NumOfParticipants)</td>
                    </tr>
                }              
            </tbody>
        </table>
    }
</MudPaper>

@code
{
    [Parameter]
    public SurveyButtonGroupResponsesGroupedByQuestion ButtonResponseGroup { get; set; } = default!;

    [Parameter]
    public SurveyResponseSelector Selector { get; set; } = default!;
    

    private IEnumerable<ParticipantsPerResponseTypes> GetSurveyParticipantRows(SurveyButtonResponseGroupedByQuestion btg) =>
        this.Selector.ParticipantPredicatesByType
            .SelectMany(pp => btg.NumberOfParticipantsByCriterion(pp.Predicate, pp.Name))
            .ToList();
}
