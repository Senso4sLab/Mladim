@using Mladim.Client.ViewModels.Survey;
@using Mladim.Domain.Enums;
@using Mladim.Domain.Extensions;



<MudPaper Class="p-2">
    <MudText Color="Color.Tertiary" Class="py-3 px-2" Typo="Typo.h2">@ButtonResponseGroup.QuestionDescription</MudText>

    @foreach(var buttonResponse in ButtonResponseGroup.ButtonGroupResponses)
    {
        <MudText Color="Color.Tertiary" Class="py-3 px-2" Typo="Typo.h2">@buttonResponse.Question</MudText>
        <table class="table">
            <thead>
                <tr>
                    <th scope="col">@ContingencyCalculator.SurveyResponseSelector.Name</th>
                    @foreach (var type in Enum.GetValues<SurveyButtonResponseType>())
                    {
                        <th class="text-center" scope="col">@type.GetDisplayAttribute()</th>
                    }
                    <th class="text-center" scope="col">Skupaj</th>
                </tr>
            </thead>
            <tbody>
               @*  @foreach (var row in GetContingencyTable(buttonResponse).ParticipantsByCriteria)
                {
                    <tr>
                        <th scope="row">@row.Criterion</th>

                        @foreach (var participantsByResponseType in row.ParticipantsByReponseTypes)
                        {
                            <td class="text-center">@participantsByResponseType.Unit</td>
                        }
                        <td class="text-center">@row.ParticipantsByReponseTypes.Sum(pr => pr.Unit)</td>
                    </tr>
                }   *@                 
            </tbody>
        </table>
    }
</MudPaper>

@code
{
    [Parameter]
    public SurveyButtonGroupResponsesGroupedByQuestion ButtonResponseGroup { get; set; } = default!;

    [Parameter]
    public ContingencyCalculator ContingencyCalculator { get; set; } = default!;


    private IEnumerable<ContingencyTable> Tables = new List<ContingencyTable>();

    protected override void OnParametersSet()
    {
        //Tables = ButtonResponseGroup.ButtonGroupResponses.Select(btn => GetContingencyTable(btn)).ToList();
    }

    private ContingencyTable GetContingencyTable(ISelectableReponseType reponseType) =>
        this.ContingencyCalculator.GetContingencyTableFor(reponseType);

       
}
