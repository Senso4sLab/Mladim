@using Mladim.Client.Models;
@using Mladim.Client.ViewModels.Survey;
@using Mladim.Domain.Enums;
@using Syncfusion.Blazor.Charts
@using Mladim.Domain.Extensions
@implements IDisposable




    <SfChart @ref="@Chart" Height="70" Width="@Parent.StackedBarWidth" EnableAnimation="false" Title="@Title">
        <ChartMargin Left="0" Right="0" Top="0" Bottom="0"></ChartMargin>
            <ChartPrimaryXAxis Visible="false" ValueType="Syncfusion.Blazor.Charts.ValueType.Category" />
            <ChartPrimaryYAxis Visible="false" />
            <ChartTitleStyle FontFamily="Poppins" FontWeight="600" Size="1rem"  Color="#43525d" TextAlignment="Alignment.Near"></ChartTitleStyle>
            <ChartArea>
                <ChartAreaBorder Width="0"></ChartAreaBorder>
            </ChartArea>          
            <ChartSeriesCollection>
                @foreach (var seriesData in QuestionsResponseBar.ResponseBar)
                {                   
                        <ChartSeries  DataSource="@seriesData.Data" Fill="@seriesData.Fill" XName="@seriesData.XName" YName="@seriesData.YName"  Type="ChartSeriesType.StackingBar100">                         
                            <ChartCornerRadius BottomLeft="@seriesData.LeftRadius" TopLeft="@seriesData.LeftRadius" BottomRight="@seriesData.RightRadius" TopRight="@seriesData.RightRadius" />
                            <ChartMarker>
                                <ChartDataLabel Visible="true" Name="Label" Position="Syncfusion.Blazor.Charts.LabelPosition.Middle">
                                    <ChartDataLabelFont Color="#ffffff"></ChartDataLabelFont>
                                </ChartDataLabel>
                            </ChartMarker>                      
                        </ChartSeries>                   
                }
            </ChartSeriesCollection>
        </SfChart>

@code 
{

        [Parameter]
        public IExportChart Parent { get; set; } = default!;

        [Parameter]
        public QuestionResponseBar QuestionsResponseBar { get; set; } = default!;

        [Parameter]
        public string Title { get; set; } = default!;

    private SfChart Chart = default!;

    protected override void OnInitialized()
    {      

        Parent.AddExportChart(ExportChartToImage());     
    }   

    private Func<Task> ExportChartToImage() =>    
        () => Chart.ExportAsync(ExportType.PNG, Guid.NewGuid().ToString());

    
      

    public void Dispose()
    {      
        Parent.RemoveExportChart(ExportChartToImage());
    }

   
}
