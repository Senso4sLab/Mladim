@using Mladim.Client.ViewModels.Survey;
@using Mladim.Domain.Enums;
@using Mladim.Domain.Extensions;
@using Mladim.Domain.Models.Survey.ParticipantResponseTypes;

<style>
    .bold_font
    {
        font-weight:bold;       
    }   

    td
    {
        text-align: center;
        color: #777A98;
    }

    th {
        color: #777A98;
    }

    .normal_font {
        font-weight: normal;
    }
</style>


<MudPaper Class="p-2" Elevation="3">
    <MudText Color="Color.Tertiary" Class="py-3 px-2" Typo="Typo.h2">@Response.SurveyQuestion.Texts.FirstOrDefault()</MudText>
   
        <table class="table">
            <thead>
                <tr class="d-flex">
                    <th scope="col" class="col-3">@Table.Name</th>
                
                    <th scope="col" class="col-1 text-center">
                        <span style="color:#4da456;" class="oi oi-thumb-up thumb"></span>
                    </th>
                    <th scope="col" class="col-1 text-center">
                        <span style="color:#4da456;" class="oi oi-thumb-down thumb"></span>
                    </th>                
                    <th scope="col" class="bold_font col-1 text-center">Skupaj</th>
                    <th scope="col" class="col-6"></th>
                </tr>
            </thead>
            <tbody>          
                @foreach (var row in Table.ParticipantsByCriteria)
                {               
                        <tr class="d-flex">
                            <th scope="row" class="@(row.Criterion == "Skupaj" ? "bold_font": "normal_font") col-3">@row.Criterion</th>

                            @foreach (var column in AvailableResponseTypes)
                            {
                                <td class="@(row.Criterion == "Skupaj" ? "bold_font": "normal_font") col-1">@(row.ReponseTypesPerCriterion.FirstOrDefault(rt => rt.ResponseType.ToString() == column.ToString())?.Value ?? 0)</td>
                            }

                            <td class="@(row.Criterion == "Skupaj" ? "bold_font": "normal_font") col-1">@Math.Round(row.ReponseTypesPerCriterion.Sum(pr => pr.Value),0)</td>
                            <td class="col-6"> </td>
                        </tr>                              
                }           
            </tbody>
        </table>
    
</MudPaper>

@code
{
    [Parameter]
    public SurveyResponsesGroupedBySelectableQuestionVM Response { get; set; } = default!;

    [Parameter]
    public CogntigencyTableContext Context { get; set; } = default!;

    private IEnumerable<SurveyBooleanResponseType> AvailableResponseTypes = Enum.GetValues<SurveyBooleanResponseType>().ToList();

    private ContingencyTable Table = default!;

    private ContingencyTable GetContingencyTable() =>
        this.Context.GetContingencyTableFor(Response);

    protected override void OnParametersSet() =>    
        this.Table = GetContingencyTable();    
}
