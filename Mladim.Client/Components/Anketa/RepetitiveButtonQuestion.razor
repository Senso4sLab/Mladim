@using Mladim.Client.ViewModels.Survey;
@using Mladim.Domain.Enums;
@using Syncfusion.Blazor.SplitButtons



<div>
    <ValidationMessage style="margin-bottom:0.4rem;" For="@(() => SurveyResponse.Response)" />

    <div class="row">
        <div class="btn-group col-sm-12 col-lg-7">
            @foreach (var groupBtn in GroupButtons)
            {
                <button type="button" @onclick="(() => OnButtonClick(groupBtn.Value))" class="@groupBtn.CssClass">@groupBtn.Text</button>
            }
        </div>
    </div>
</div>


@code 
{
    [Parameter]
    public string SurveyQuestion { get; set; } = default!;    

    [Parameter]    
    public QuestionRepetitiveButtonResponseVM SurveyResponse { get; set; } = default!;

    private List<GroupRepetitiveBtn> GroupButtons = new()
    {
        new ("NIČ ALI ZELO MALO", SurveyRepetitiveButtonResponseType.None),
        new ("MALO", SurveyRepetitiveButtonResponseType.Little),
        new ("PRECEJ", SurveyRepetitiveButtonResponseType.Quite),
        new ("MOČNO", SurveyRepetitiveButtonResponseType.Greatly),
    };

    protected override void OnInitialized()
    {
        //surveryButtonResponseVM = this.SurveyResponse.AddButtonResponse();        
    }  

    private void OnButtonClick(SurveyRepetitiveButtonResponseType btnType)
    {
        foreach (var groupBtn in GroupButtons)
        {
            if (groupBtn.Value == btnType)
                groupBtn.Active();
            else
                groupBtn.NoActive();
        }
        SurveyResponse.Response = btnType;

        StateHasChanged();
    }


    public class GroupRepetitiveBtn
    {
        public string CssClass { get; set; } = string.Empty;
        public SurveyRepetitiveButtonResponseType Value { get; }
        public string Text { get; }
     
        private string NotActiveSmile => "btn btn-primary shadow-none";
        private string ActiveSmile => $"{NotActiveSmile} group-btn-active";


        public GroupRepetitiveBtn(string text, SurveyRepetitiveButtonResponseType value)
        {
            this.Text = text;
            this.Value = value;
            this.CssClass = NotActiveSmile;
        }

        public void Active() =>
            this.CssClass = ActiveSmile;

        public void NoActive() =>
            this.CssClass = NotActiveSmile;
    }
}
