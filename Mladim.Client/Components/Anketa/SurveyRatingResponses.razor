@using Mladim.Client.ViewModels.Survey;
@using Mladim.Domain.Enums;
@using Mladim.Domain.Extensions;

<MudPaper Class="p-2">
    <MudText Color="Color.Tertiary" Class="py-3" Typo="Typo.h2">@RatingResponseGroup.Question</MudText>   
    
    <table class="table">
        <thead>
            <tr>
                <th scope="col">@Selector.Description</th>
                @foreach (var type in Enum.GetValues<SurveyRatingResponseType>())
                {
                    <th scope="col">@type.GetDisplayAttribute()</th>
                }
                <th scope="col">Skupaj</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var row in surveyParticipantListRow)
            {
                <tr>
                    <th scope="row">@row.Criterion</th>

                    @foreach (var participantsByType in row.ParticipantsByType)
                    {
                        <td>@participantsByType.NumOfParticipants</td>
                    }
                    <td>@row.ParticipantsByType.Sum(pt => pt.NumOfParticipants)</td>
                </tr>
            }
            @*  @foreach(var participant in Selector.ParticipantPredicatesByType)
            {
                <tr>
                    <th scope="row">@participant.Name</th>                  

                    @foreach (var numOfParticipants in RatingResponseGroup.NumberOfParticipantsByCriteria(participant.Predicate))
                    {                       
                        <td>@numOfParticipants</td>
                    }
                    <td>@RatingResponseGroup.NumberOfParticipantsByCriteria(participant.Predicate).Sum()</td>
                </tr>
            }

                <tr>
                    <th scope="row">Skupaj</th>                   

                    @foreach (var numOfParticipants in RatingResponseGroup.NumberOfParticipantsByCriteria())
                    {                        
                        <td>@numOfParticipants</td>
                    }
                <td>@RatingResponseGroup.NumberOfParticipantsByCriteria().Sum()</td>
                </tr>  *@          
        </tbody>
    </table>
</MudPaper>

@code 
{
    [Parameter]
    public SurveyRatingResponsesGroupedByQuestion RatingResponseGroup { get; set; } = default!;

    [Parameter]
    public SurveyResponseSelector Selector { get; set; } = default!;

    private IEnumerable<SurveyParticipantRow> surveyParticipantListRow = new List<SurveyParticipantRow>();

    // protected override void OnInitialized()
    // {
    //     surveyParticipantListRow = GetSurveyParticipantRows();
    // }

    private IEnumerable<SurveyParticipantRow> GetSurveyParticipantRows() =>
        this.Selector.ParticipantPredicatesByType
            .Select(pp => RatingResponseGroup.NumberOfParticipantsByCriterion(pp))
            .ToList();

    protected override void OnParametersSet()
    {
        surveyParticipantListRow = GetSurveyParticipantRows();
    }
}
