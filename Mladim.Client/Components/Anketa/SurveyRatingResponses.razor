@using Mladim.Client.ViewModels.Survey;
@using Mladim.Domain.Enums;
@using Mladim.Domain.Extensions;

<MudPaper Class="p-2">
    <MudText Color="Color.Tertiary" Class="py-3 px-2" Typo="Typo.h2">@RatingResponseGroup.Question</MudText>

    <table class="table">
        <thead>
            <tr>
                <th scope="col">@Selector.Name</th>
                @for (int i = 0; i < numOfRatingTypes; i++)
                {
                    <th class="text-center" scope="col">
                        @for(int j = 0; j <= i; j++)
                        {
                            <i style="color:#4da456;" class="bi bi-emoji-smile px-1" />
                        }                        
                    </th>                    
                }               
                <th class="text-center"  scope="col">Skupaj</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var row in surveyParticipantListRow)
            {
                <tr>
                    <th scope="row">@row.Criterion</th>

                    @foreach (var participantsByType in row.ParticipantsPerType)
                    {
                        <td class="text-center">@participantsByType.NumOfParticipants</td>
                    }
                    <td class="text-center">@row.ParticipantsPerType.Sum(pt => pt.NumOfParticipants)</td>
                </tr>
            }                 
        </tbody>
    </table>
</MudPaper>

@code 
{
    [Parameter]
    public SurveyRatingResponsesGroupedByQuestion RatingResponseGroup { get; set; } = default!;

    [Parameter]
    public SurveyResponseSelector Selector { get; set; } = default!;

    private IEnumerable<ParticipantsPerResponseTypes> surveyParticipantListRow = new List<ParticipantsPerResponseTypes>();    

    private IEnumerable<ParticipantsPerResponseTypes> GetSurveyParticipantRows() =>
        this.Selector.ParticipantPredicatesByType
            .SelectMany(pp => RatingResponseGroup.NumberOfParticipantsByCriterion(pp.Predicate, pp.Name))
            .ToList();

    private int numOfRatingTypes = 0;

    protected override void OnInitialized()
    {
        numOfRatingTypes = Enum.GetValues<SurveyRatingResponseType>().Count();
    }


    protected override void OnParametersSet()
    {
        surveyParticipantListRow = GetSurveyParticipantRows();
    }
}
