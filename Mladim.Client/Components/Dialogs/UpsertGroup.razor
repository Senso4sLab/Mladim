@using Mladim.Client.Services.SubjectServices.Contracts;
@using Mladim.Client.Validators;
@using Mladim.Domain.Enums;
<MudDialog Style="min-width:400px;">
    <DialogContent>
        <MudForm @ref="@groupForm" Model="@Group" Validation="@(groupValidator.ValidateValue)" OnValidSubmit="OnValidSubmit">
            <MudStack Spacing="4">
                <MudTextField @bind-Value="Group.FullName" For="@(() => Group.FullName)" Variant="Variant.Outlined" Label="Ime" />
                <MudTextField @bind-Value="Group.Description" For="@(() => Group.Description)" Variant="Variant.Outlined" Label="Opis" />

                <MudSelect MultiSelection="true" T="NamedEntityVM" @bind-SelectedValues="Group.Members"  ToStringFunc="@(group => group.FullName)" Label="@(GroupType == GroupType.Project ?"Izberi uporabnike":"Izberi udeležence")" AdornmentColor="Color.Primary" Variant="Variant.Outlined">
                    @foreach (var member in NamedMembers)
                    {
                        <MudSelectItem Value="member">@member.FullName</MudSelectItem>
                    }
                </MudSelect>

                <MudSwitch @bind-Checked="Group.IsActive" Color="Color.Primary">@(Group.IsActive ? "Aktiven" : "Neaktiven")</MudSwitch>
                </MudStack>
            </MudForm>
        </DialogContent>
        <DialogActions>
            <MudButton OnClick="Cancel">Prekliči</MudButton>
            <MudButton OnClick="OnValidSubmitAsync" Color="Color.Primary">@(Group.Id == 0 ? "Dodaj" : "Spremeni")</MudButton>
        </DialogActions>
    </MudDialog>


    @code
    {
    [CascadingParameter]
    MudDialogInstance MudDialog { get; set; }

    [Parameter]
    public GroupVM Group { get; set; } 

    [Parameter]
    public GroupType GroupType { get; set; }

    [Parameter]
    public int OrganizationId { get; set; }

    [Inject]
    public IStaffMemberService StaffMemberService { get; set; } = default!;

    [Inject]
    public IParticipantService ParticipantService { get; set; } = default!;

    private MudForm? groupForm;
    private GroupValidator groupValidator = new GroupValidator();

    IEnumerable<NamedEntityVM> NamedMembers = new List<NamedEntityVM>();



    protected async override Task OnParametersSetAsync()
    {
        this.NamedMembers = await GetMemberByGroupType(GroupType);
    }

    


    private async Task<IEnumerable<NamedEntityVM>> GetMemberByGroupType(GroupType groupType) =>
        groupType switch
        {
            GroupType.Project => await StaffMemberService.GetBaseByOrganizationIdAsync(OrganizationId, true),
            GroupType.Activity => await ParticipantService.GetBaseByOrganizationIdAsync(OrganizationId, true),
            _ => throw new NotImplementedException()
        };


        private async Task OnValidSubmitAsync()
        {
       
            await groupForm.Validate();

            if (groupForm.IsValid)
                MudDialog.Close(DialogResult.Ok(Group));
        }


        void Cancel() =>
            MudDialog.Cancel();


}