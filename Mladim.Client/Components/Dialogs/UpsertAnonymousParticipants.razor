
@using System.Linq;
@using Mladim.Domain.Enums;

<MudDialog Style="min-width:500px;">
    <DialogContent>
        <MudDataGrid T="AnonymousParticipantTableElements" Items="@Elements" ReadOnly=false EditMode="DataGridEditMode.Cell"
                     Bordered="true" Dense="false" EditTrigger="DataGridEditTrigger.Manual">
            <Columns>
                <PropertyColumn Property="x => x.AgeGroup.GetDisplayAttributeString()" Title="Starostna skupina" IsEditable="false" />
                <PropertyColumn  Property="x => x.Male" Title="@Gender.Male.GetDisplayAttributeString()">
                    <EditTemplate>
                        <MudNumericField @bind-Value="context.Item.Male" Min="0" />
                    </EditTemplate>              
                </PropertyColumn>                  
                <PropertyColumn Property="x => x.Female" Title="@Gender.Female.GetDisplayAttributeString()" >
                    <EditTemplate>
                         <MudNumericField @bind-Value="context.Item.Female" Min="0"/>
                    </EditTemplate>               
                </PropertyColumn>
                <PropertyColumn Property="x => x.Other" Title="@Gender.Other.GetDisplayAttributeString()">
                    <EditTemplate>
                        <MudNumericField @bind-Value="context.Item.Other" Min="0" />
                    </EditTemplate>
                </PropertyColumn>
            </Columns>
        </MudDataGrid>
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="Cancel">Prekliči</MudButton>
        <MudButton OnClick="Submit" Color="Color.Primary">Shrani</MudButton>
    </DialogActions>
</MudDialog>


@code
{
    [CascadingParameter]
    MudDialogInstance MudDialog { get; set; }

    [Parameter]                          
    public List<AnonymousParticipantsVM> AnonymousParticipants { get; set; }


    private List<AnonymousParticipantTableElements> Elements { get; set; }


    private List<AnonymousParticipantTableElements> GetTableElements(IEnumerable<AnonymousParticipantsVM> aParticipants) =>
       Enum.GetValues<AgeGroups>().Select(ageGroup => new AnonymousParticipantTableElements()
           {
               AgeGroup = ageGroup,
               Female = aParticipants.Where(p => p.AgeGroup == ageGroup && p.Gender == Gender.Female)
                .Sum(p => p.Number),
               Male = aParticipants.Where(p => p.AgeGroup == ageGroup && p.Gender == Gender.Male)
                .Sum(p => p.Number),
               Other = aParticipants.Where(p => p.AgeGroup == ageGroup && p.Gender == Gender.Other)
                .Sum(p => p.Number),
           }).ToList();   


    protected override void OnParametersSet()
    {
        this.Elements = GetTableElements(AnonymousParticipants);
    }

    private IEnumerable<AnonymousParticipantsVM> GetParticipantFromTable() =>
        Elements.GroupBy(e => e.AgeGroup)
            .SelectMany(g => Enum.GetValues<Gender>().Select(gender => new AnonymousParticipantsVM()
                {
                    AgeGroup = g.Key,
                    Gender = gender,
                    Number = gender switch
                    {
                        Gender.Male => g.Sum(x => x.Male),
                        Gender.Female => g.Sum(x => x.Female),
                        Gender.Other => g.Sum(x => x.Other),
                    }                   
                })).Where(ap => ap.Number > 0)
            .ToList();


    private void Submit() =>    
        MudDialog.Close(DialogResult.Ok(GetParticipantFromTable()));
    

    void Cancel() =>    
        MudDialog.Close(DialogResult.Ok(AnonymousParticipants));
    
}